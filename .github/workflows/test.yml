name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:17.5-alpine
        env:
          POSTGRES_USER: gmfam
          POSTGRES_PASSWORD: gmfam123
          POSTGRES_DB: gmfam_test
        options: >-
          --health-cmd "pg_isready -U gmfam"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.24

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Debug PostgreSQL connection
      run: |
        echo "Checking if PostgreSQL port is open..."
        netstat -tuln | grep 5432 || echo "Port 5432 not found"
        echo "Checking PostgreSQL service..."
        docker ps | grep postgres || echo "No postgres container found"
        echo "Trying to connect without pg_isready..."
        timeout 30 bash -c 'until echo > /dev/tcp/127.0.0.1/5432; do sleep 1; done' && echo "Port 5432 is open" || echo "Port 5432 is not accessible"
        
    - name: Wait for PostgreSQL
      run: |
        echo "Installing postgresql-client..."
        sudo apt-get update && sudo apt-get install -y postgresql-client
        echo "Waiting for PostgreSQL to be ready..."
        for i in {1..30}; do
          if pg_isready -h 127.0.0.1 -p 5432 -U gmfam; then
            echo "PostgreSQL is ready!"
            break
          else
            echo "Attempt $i: PostgreSQL not ready, waiting..."
            sleep 2
          fi
        done
        echo "Final PostgreSQL check..."
        pg_isready -h 127.0.0.1 -p 5432 -U gmfam || exit 1

    - name: Test
      env:
        PAGODA_APP_ENVIRONMENT: test
        PAGODA_DATABASE_DRIVER: postgres
        PAGODA_DATABASE_TESTCONNECTION: "postgres://gmfam:gmfam123@127.0.0.1:5432/gmfam_test?sslmode=disable"
      run: make test
